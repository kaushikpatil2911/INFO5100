/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.AccountantRole;


import Business.Enterprise.SupplierEnterprise;
import Business.Organization.AccountingDepartOrganization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.PurchaseWorkRequest;
import Business.WorkQueue.WorkRequest;
import static com.sun.corba.se.spi.presentation.rmi.StubAdapter.request;
import java.awt.CardLayout;
import java.awt.Component;
import java.awt.Image;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Bo
 */
public class AccountantWorkAreaJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private SupplierEnterprise enterprise;
    private UserAccount userAccount;
    PurchaseWorkRequest request;
    /**
     * Creates new form DoctorWorkAreaJPanel
     */
    public AccountantWorkAreaJPanel(JPanel userProcessContainer, UserAccount account, SupplierEnterprise enterprise) {
        initComponents();
        
        this.userProcessContainer = userProcessContainer;
        this.enterprise = enterprise;
        this.userAccount = account;
        valueLabel.setText(enterprise.getName());
        
        
        populateRequestTable();
        populateOrderCombo();
        
        String path = "src/images/Accountant.jpg";
        ImageIcon icon = new ImageIcon(path);
        icon.setImage(icon.getImage().getScaledInstance(155,155,Image.SCALE_DEFAULT));
        picLabel.setIcon(icon);
    }
    
    public void populateRequestTable(){
        DefaultTableModel model = (DefaultTableModel) workRequestJTable.getModel();
        
        model.setRowCount(0);
        for (WorkRequest request : enterprise.getPurchasingWorkQueue().getWorkRequestList()){
            Object[] row = new Object[5];
            row[0] = request;
            row[1] = request.getSender().getEmployee().getName();
            row[2] = request.getReceiver() == null ? null : request.getReceiver().getEmployee().getName();
            row[3] = request.getStatus();
            row[4] = request.getOrder().getStatus();
            model.addRow(row);
        }
    }
    
    public void populateOrderCombo(){
        orderComboBox.removeAllItems();
        for(WorkRequest workRequest : userAccount.getReceiveWorkQueue().getWorkRequestList()) {
            if(workRequest.getStatus().equals("Received")){
                orderComboBox.addItem(workRequest);
            }
       }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        workRequestJTable = new javax.swing.JTable();
        refreshTestJButton = new javax.swing.JButton();
        enterpriseLabel = new javax.swing.JLabel();
        valueLabel = new javax.swing.JLabel();
        assignJButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        submitJButton = new javax.swing.JButton();
        orderComboBox = new javax.swing.JComboBox();
        btnRequestTally = new javax.swing.JButton();
        picLabel = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        workRequestJTable.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        workRequestJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Order", "Supplier", "Accountant", "Work Status", "Order Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        workRequestJTable.setMaximumSize(new java.awt.Dimension(1000, 100));
        workRequestJTable.setPreferredSize(new java.awt.Dimension(800, 100));
        workRequestJTable.setRowHeight(24);
        jScrollPane1.setViewportView(workRequestJTable);
        if (workRequestJTable.getColumnModel().getColumnCount() > 0) {
            workRequestJTable.getColumnModel().getColumn(0).setResizable(false);
            workRequestJTable.getColumnModel().getColumn(1).setResizable(false);
            workRequestJTable.getColumnModel().getColumn(2).setResizable(false);
            workRequestJTable.getColumnModel().getColumn(3).setResizable(false);
            workRequestJTable.getColumnModel().getColumn(4).setResizable(false);
        }

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 150, 830, 141));

        refreshTestJButton.setBackground(new java.awt.Color(0, 153, 153));
        refreshTestJButton.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        refreshTestJButton.setText("Refresh");
        refreshTestJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshTestJButtonActionPerformed(evt);
            }
        });
        add(refreshTestJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 100, -1, 40));

        enterpriseLabel.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        enterpriseLabel.setText("Enterprise :");
        add(enterpriseLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 100, 89, 30));

        valueLabel.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        valueLabel.setForeground(new java.awt.Color(204, 0, 0));
        valueLabel.setText("<value>");
        add(valueLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 100, 158, 30));

        assignJButton.setBackground(new java.awt.Color(0, 153, 153));
        assignJButton.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        assignJButton.setText("Assign to me");
        assignJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignJButtonActionPerformed(evt);
            }
        });
        add(assignJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 300, 160, 50));

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        jLabel1.setText("My Order :");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 310, -1, 30));

        submitJButton.setBackground(new java.awt.Color(0, 153, 153));
        submitJButton.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        submitJButton.setText("Complete Order");
        submitJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitJButtonActionPerformed(evt);
            }
        });
        add(submitJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 350, 220, 40));

        orderComboBox.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        add(orderComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 300, 220, 50));

        btnRequestTally.setBackground(new java.awt.Color(0, 153, 153));
        btnRequestTally.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        btnRequestTally.setText("Request Public Department to Pack>>");
        btnRequestTally.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRequestTallyActionPerformed(evt);
            }
        });
        add(btnRequestTally, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 400, 420, 50));
        add(picLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 6, -1, -1));

        jLabel2.setFont(new java.awt.Font("Marker Felt", 1, 36)); // NOI18N
        jLabel2.setText("Accountant Work Area");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 30, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void refreshTestJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshTestJButtonActionPerformed

        populateRequestTable();
        populateOrderCombo();
        
    }//GEN-LAST:event_refreshTestJButtonActionPerformed

    private void assignJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignJButtonActionPerformed

        int selectedRow = workRequestJTable.getSelectedRow();

        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Pls select a row!!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        request = (PurchaseWorkRequest)workRequestJTable.getValueAt(selectedRow, 0);
        if(!request.getStatus().equals("Pending")){
            JOptionPane.showMessageDialog(null, "Order is confirmed", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        request.setReceiver(userAccount);
        request.setStatus("Received");
        userAccount.getReceiveWorkQueue().getWorkRequestList().add(request);
        populateRequestTable();
        populateOrderCombo();
    }//GEN-LAST:event_assignJButtonActionPerformed

    private void submitJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitJButtonActionPerformed
        
        //request.setPurchaseResult(orderComboBox.getSelectedItem().toString());
        ((PurchaseWorkRequest)orderComboBox.getSelectedItem()).setPurchaseResult("Prepare");
        ((PurchaseWorkRequest)orderComboBox.getSelectedItem()).setStatus("Confirmed");
        
        //userAccount.getReceiveWorkQueue().getWorkRequestList().add((WorkRequest)orderComboBox.getSelectedItem());
        populateRequestTable();
        populateOrderCombo();
    }//GEN-LAST:event_submitJButtonActionPerformed

    private void btnRequestTallyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRequestTallyActionPerformed
        // TODO add your handling code here:
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        userProcessContainer.add("RequestLabTestJPanel", new RequestPublicDepartJPanel(userProcessContainer, userAccount, enterprise));
        layout.next(userProcessContainer);
    }//GEN-LAST:event_btnRequestTallyActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton assignJButton;
    private javax.swing.JButton btnRequestTally;
    private javax.swing.JLabel enterpriseLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox orderComboBox;
    private javax.swing.JLabel picLabel;
    private javax.swing.JButton refreshTestJButton;
    private javax.swing.JButton submitJButton;
    private javax.swing.JLabel valueLabel;
    private javax.swing.JTable workRequestJTable;
    // End of variables declaration//GEN-END:variables
}
