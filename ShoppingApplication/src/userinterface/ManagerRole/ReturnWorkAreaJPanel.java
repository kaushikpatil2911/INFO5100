/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.ManagerRole;

import Business.Enterprise.CVSEnterprise;
import Business.Order.Order;
import Business.Order.OrderItem;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.PurchaseWorkRequest;
import Business.WorkQueue.ReturnWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.awt.Component;
import java.awt.Image;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Bo
 */
public class ReturnWorkAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ReturnWorkAreaJPanel
     */
    private JPanel userProcessContainer;
    private CVSEnterprise enterprise;
    private UserAccount userAccount;
    //private ReturnWorkRequest request;
    
    public ReturnWorkAreaJPanel(JPanel userProcessContainer, CVSEnterprise enterprise, UserAccount userAccount ) {
        initComponents();
        
        this.userProcessContainer = userProcessContainer;
        this.enterprise = enterprise;
        this.userAccount = userAccount;
        valueLabel.setText(enterprise.getName());
        
        
        populateTable();
        populateOrderCombo();
        
        String path = "src/images/grocery.jpeg";
        ImageIcon icon = new ImageIcon(path);
        icon.setImage(icon.getImage().getScaledInstance(155,155,Image.SCALE_DEFAULT));
        picLabel.setIcon(icon);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        submitJButton = new javax.swing.JButton();
        orderComboBox = new javax.swing.JComboBox();
        valueLabel = new javax.swing.JLabel();
        assignJButton = new javax.swing.JButton();
        enterpriseLabel = new javax.swing.JLabel();
        refreshTestJButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        returnOrderJTable = new javax.swing.JTable();
        btnBack = new javax.swing.JButton();
        picLabel = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        submitJButton.setBackground(new java.awt.Color(0, 153, 153));
        submitJButton.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        submitJButton.setText("Complete Order");
        submitJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitJButtonActionPerformed(evt);
            }
        });
        add(submitJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 380, -1, 40));

        orderComboBox.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        add(orderComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 390, 186, 30));

        valueLabel.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        valueLabel.setForeground(new java.awt.Color(153, 0, 51));
        valueLabel.setText("<value>");
        add(valueLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(159, 127, 158, 26));

        assignJButton.setBackground(new java.awt.Color(0, 153, 153));
        assignJButton.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        assignJButton.setText("Assign to me");
        assignJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignJButtonActionPerformed(evt);
            }
        });
        add(assignJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 380, 180, 41));

        enterpriseLabel.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        enterpriseLabel.setText("Enterprise");
        add(enterpriseLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(66, 127, -1, 26));

        refreshTestJButton.setBackground(new java.awt.Color(0, 153, 153));
        refreshTestJButton.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        refreshTestJButton.setText("Refresh");
        refreshTestJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshTestJButtonActionPerformed(evt);
            }
        });
        add(refreshTestJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(732, 167, -1, 40));

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        jLabel1.setText("Order :");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 390, 76, -1));

        returnOrderJTable.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        returnOrderJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Order", "Customer", "Manager", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        returnOrderJTable.setRowHeight(24);
        jScrollPane1.setViewportView(returnOrderJTable);
        if (returnOrderJTable.getColumnModel().getColumnCount() > 0) {
            returnOrderJTable.getColumnModel().getColumn(0).setResizable(false);
            returnOrderJTable.getColumnModel().getColumn(1).setResizable(false);
            returnOrderJTable.getColumnModel().getColumn(2).setResizable(false);
            returnOrderJTable.getColumnModel().getColumn(3).setResizable(false);
        }

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 213, 777, 149));

        btnBack.setBackground(new java.awt.Color(0, 153, 153));
        btnBack.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        btnBack.setText("<< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 470, -1, 50));
        add(picLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 6, -1, -1));

        jLabel2.setFont(new java.awt.Font("Marker Felt", 1, 36)); // NOI18N
        jLabel2.setText("Return  Product  Work   Area");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 30, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    public void populateTable(){
        DefaultTableModel model = (DefaultTableModel) returnOrderJTable.getModel();
        
        model.setRowCount(0);
        for (WorkRequest request : enterprise.getReturnWorkQueue().getWorkRequestList()){
            Object[] row = new Object[4];
            row[0] = request;
            row[1] = request.getSender().getEmployee().getName();
            row[2] = request.getReceiver() == null ? null : request.getReceiver().getEmployee().getName();
            row[3] = request.getOrder().getStatus();
            model.addRow(row);
        }
    }
    
    public void populateOrderCombo(){
        orderComboBox.removeAllItems();
        for(WorkRequest workRequest : userAccount.getReceiveWorkQueue().getWorkRequestList()) {
            if(workRequest.getStatus().equals("Received")){
                orderComboBox.addItem(workRequest);
            }
       }
    }
    
    private void submitJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitJButtonActionPerformed
        
        ReturnWorkRequest request = (ReturnWorkRequest)orderComboBox.getSelectedItem();
        
        populateTable();
        populateOrderCombo();
        
        for (OrderItem p : request.getOrder().getOrderItemList()){
            int oldAvail = p.getProduct().getAvail();
            int oldQty = p.getQuantity();
            int newQty = oldAvail + oldQty;
            p.getProduct().setAvail(newQty);
        }
        JOptionPane.showMessageDialog(null, "Order canceled!");
        
        enterprise.setFeshFoodProfit(enterprise.getFreshProfit()-request.getOrder().getFoodProfit());
        enterprise.setDrugProfit(enterprise.getDrugProfit()-request.getOrder().getFreshProfit());
        enterprise.setToolProfit(enterprise.getToolProfit()-request.getOrder().getToolProfit());
        enterprise.setDrinkProfit(enterprise.getDrinkProfit()-request.getOrder().getToiletryProfit());

        ((ReturnWorkRequest)orderComboBox.getSelectedItem()).setReturnResult("Prepare");
        request.setStatus("Completed");
        request.getOrder().setStatus("Returned");

        populateTable();
        populateOrderCombo();
    }//GEN-LAST:event_submitJButtonActionPerformed

    private void assignJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignJButtonActionPerformed

        int selectedRow = returnOrderJTable.getSelectedRow();

        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Pls select a row!!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }

        ReturnWorkRequest request = (ReturnWorkRequest)returnOrderJTable.getValueAt(selectedRow, 0);
        if(!request.getStatus().equals("Pending")){
            JOptionPane.showMessageDialog(null, "Order is confirmed", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        userAccount.getReceiveWorkQueue().getWorkRequestList().add(request);
        
        request.setReceiver(userAccount);
        request.setStatus("Received");
        populateTable();
        populateOrderCombo();
    }//GEN-LAST:event_assignJButtonActionPerformed

    private void refreshTestJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshTestJButtonActionPerformed
        populateTable();
        populateOrderCombo();
    }//GEN-LAST:event_refreshTestJButtonActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton assignJButton;
    private javax.swing.JButton btnBack;
    private javax.swing.JLabel enterpriseLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox orderComboBox;
    private javax.swing.JLabel picLabel;
    private javax.swing.JButton refreshTestJButton;
    private javax.swing.JTable returnOrderJTable;
    private javax.swing.JButton submitJButton;
    private javax.swing.JLabel valueLabel;
    // End of variables declaration//GEN-END:variables
}
